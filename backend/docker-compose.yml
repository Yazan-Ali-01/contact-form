version: '3'

services:
nginx:
  image: nginx:latest
  ports:
    - "8080:80"
  volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  depends_on:
    - app
  networks:
    - app-network

app:
  build: .
  ports:
    - "3000:3000"
  environment:
    - NODE_ENV=development
    - PORT=3000
    - MONGO_URI=mongodb://mongo:27017/contact-form
    - SMTP_HOST=sandbox.smtp.mailtrap.io
    - SMTP_PORT=587
    - SMTP_USER=6e23a1c1c25613
    - SMTP_PASS=718d79dea74313
    - ADMIN_EMAIL=thehunterzeko@gmail.com
    - RABBITMQ_URL=amqp://rabbitmq
    - JWT_SECRET=helloworld
  volumes:
    - .:/app
    - /app/node_modules
  depends_on:
    - mongo
    - rabbitmq
  networks:
    - app-network

email_worker:
  build:
    context: .
    dockerfile: Dockerfile.worker
  environment:
    - NODE_ENV=development
    - PORT=3000
    - MONGO_URI=mongodb://mongo:27017/contact-form
    - SMTP_HOST=sandbox.smtp.mailtrap.io
    - SMTP_PORT=587
    - SMTP_USER=6e23a1c1c25613
    - SMTP_PASS=718d79dea74313
    - ADMIN_EMAIL=thehunterzeko@gmail.com
    - RABBITMQ_URL=amqp://rabbitmq
    - JWT_SECRET=helloworld
  depends_on:
    - rabbitmq
    - app
  restart: on-failure
  networks:
    - app-network

mongo:
  image: mongo
  ports:
    - "27017:27017"
  volumes:
    - mongo-data:/data/db
  networks:
    - app-network

rabbitmq:
  image: "rabbitmq:3-management"
  ports:
    - "15672:15672"
    - "5672:5672"
  volumes:
    - rabbitmq-data:/var/lib/rabbitmq
  networks:
    - app-network
  healthcheck:
    test: [ "CMD", "rabbitmqctl", "status" ]
    interval: 10s
    timeout: 5s
    retries: 5

volumes:
mongo-data: {}
rabbitmq-data: {}

networks:
app-network:
  driver: bridge
